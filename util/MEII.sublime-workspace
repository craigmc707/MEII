{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"eMG",
				"EmgRealTimeControl"
			],
			[
				"ab",
				"ab_plt_data\tstatement"
			],
			[
				"trng",
				"trng_sci\tstatement"
			],
			[
				"sub_idx",
				"sub_idx_prev"
			],
			[
				"subj",
				"subj_bar_width\tstatement"
			],
			[
				"Y",
				"Y_test\tstatement"
			],
			[
				"X_",
				"X_transform_test\tstatement"
			],
			[
				"Y_t",
				"Y_train\tstatement"
			],
			[
				"mus",
				"mus_idx_test\tstatement"
			],
			[
				"test_",
				"test_array\tstatement"
			],
			[
				"file",
				"filepath\tstatement"
			],
			[
				"w",
				"write_message\tfunction"
			],
			[
				"ms",
				"ms_lda\tstatement"
			],
			[
				"read",
				"read_message\tfunction"
			],
			[
				"ms_fil",
				"ms_file_path\tstatement"
			],
			[
				"add",
				"add_definitions\tcommand"
			],
			[
				"MAHI",
				"MAHIEXOII"
			],
			[
				"INC",
				"INCLUDE_DIRS"
			],
			[
				"I",
				"INCLUDE_DIRS"
			],
			[
				"MA",
				"MAHIEXOII"
			],
			[
				"size",
				"size"
			],
			[
				"get",
				"get_support"
			],
			[
				"fea",
				"feature_selection\tmodule"
			],
			[
				"feature",
				"n_features"
			],
			[
				"str",
				"str_dof\tstatement"
			],
			[
				"cv",
				"cv_results_array\tstatement"
			],
			[
				"my_",
				"my_intercept\tstatement"
			],
			[
				"to",
				"to_csv"
			],
			[
				"fiel",
				"file_path_buffer\tstatement"
			],
			[
				"map",
				"mapsize\tstatement"
			],
			[
				"X_tran",
				"X_transform_rfe\tstatement"
			],
			[
				"X_tes",
				"X_test_trans\tstatement"
			],
			[
				"sel",
				"sel_feats_rfe\tstatement"
			],
			[
				"n_f",
				"n_features_rfe\tstatement"
			],
			[
				"x",
				"X_test_trans\tstatement"
			],
			[
				"feat_",
				"feat_sel_ints\tstatement"
			],
			[
				"my",
				"myflag\tstatement"
			],
			[
				"Da",
				"DataFrame"
			],
			[
				"coeff",
				"coeff\tstatement"
			],
			[
				"n",
				"n_trials\tstatement"
			],
			[
				"feat",
				"feat_sel_ints\tstatement"
			],
			[
				"arraydims",
				"arraydims2\tstatement"
			],
			[
				"array",
				"arraydims2\tstatement"
			],
			[
				"coef",
				"coeff_doubles\tstatement"
			],
			[
				"ceof",
				"coeff_len\tstatement"
			],
			[
				"doub",
				"c_double"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Ted/GitHub/MEII/include/Control/Trajectory.hpp",
			"settings":
			{
				"buffer_size": 5417,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "clean.py",
			"settings":
			{
				"buffer_size": 941,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Ted/GitHub/MEII/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 5147,
				"line_ending": "Windows"
			}
		},
		{
			"file": "MEII.sublime-project",
			"settings":
			{
				"buffer_size": 720,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Ted/GitHub/MEII/src/MahiExoII/Exo.cpp",
			"settings":
			{
				"buffer_size": 714,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Ted/Box Sync/OpenSim_Modeling/MAHI_EXO_II_only/MATLAB/out.log",
			"settings":
			{
				"buffer_size": 1186987,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "CMake (Windows MSVC)",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				],
				[
					"PuTTY",
					""
				],
				[
					"Visual Studio",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"CMake (Clean)",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Make)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Make)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"Make (Linux)",
					""
				],
				[
					"Make (Windows)",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				],
				[
					"PuTTY",
					""
				],
				[
					"Visual Studio",
					""
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				],
				[
					"Visual Studio",
					""
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Linux Ninja)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"CMake (Windows Ninja)",
					""
				],
				[
					"MELScope",
					""
				],
				[
					"Ninja (Linux)",
					""
				],
				[
					"Ninja (Windows)",
					""
				],
				[
					"Visual Studio",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				]
			],
			[
				"CMake (Windows MSVC)",
				""
			]
		],
		[
			[
				[
					"CMake (Clean)",
					""
				],
				[
					"CMake (Windows MSVC)",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"CMake (Clean)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"cmake",
				"Build With: CMake (MSVC-Win64)"
			],
			[
				" instal",
				"Package Control: Install Package"
			],
			[
				"package Control",
				"Package Control: Install Package"
			],
			[
				" packc",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Ted/GitHub/MEII",
		"/C/Users/Ted/GitHub/MEII/include",
		"/C/Users/Ted/GitHub/MEII/include/MahiExoII",
		"/C/Users/Ted/GitHub/MEII/src",
		"/C/Users/Ted/GitHub/MEII/src/MahiExoII",
		"/C/Users/Ted/GitHub/MEII/util"
	],
	"file_history":
	[
		"/C/Users/Ted/Box Sync/OpenSim_Modeling/MAHI_EXO_II_only/MATLAB/err.log",
		"/C/Users/Ted/GitHub/MEII/tools/MEII.sublime-project",
		"/C/Users/Ted/GitHub/MEII/examples/CMakeLists.txt",
		"/C/Users/Ted/GitHub/MEII/CMakeLists.txt",
		"/C/Users/Ted/GitHub/MEII/src/Utility/Matrix.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Utility/Matrix.cpp",
		"/C/Users/Ted/GitHub/MEII/examples/ex_matrix.cpp",
		"/C/Users/Ted/GitHub/MEII/include/PhriLearning/DynamicMotionPrimitive.hpp",
		"/C/Users/Ted/GitHub/MEII/src/PhriLearning/DynamicMotionPrimitive.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Utility/Matrix.hpp",
		"/C/Users/Ted/GitHub/MEII/src/PhriLearning/PhriFeatures.cpp",
		"/C/Users/Ted/GitHub/MEII/include/PhriLearning/PhriFeatures.hpp",
		"/C/Users/Ted/GitHub/MEII/examples/ex_trajectory.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Control/ContinuousTrajectory.hpp",
		"/C/Users/Ted/GitHub/MEII/include/Control/DiscreteTrajectory.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Control/DiscreteTrajectory.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Control/ContinuousTrajectory.cpp",
		"/C/Users/Ted/GitHub/MEII/examples/ex_melnet_unity.cpp",
		"/C/Users/Ted/GitHub/MEII/tests/testing.cpp",
		"/C/Users/Ted/GitHub/MEII/examples/ex_mahiexoii_pos_ctrl.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Control/Trajectory.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Control/Trajectory.hpp",
		"/C/Users/Ted/GitHub/MEII/include/Utility/EigenConversions.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Utility/EigenConversions.cpp",
		"/C/Users/Ted/GitHub/MEII/include/SignalProcessing/SignalProcessor.hpp",
		"/C/Users/Ted/GitHub/MEL/examples/CMakeLists.txt",
		"/C/Users/Ted/GitHub/MEII/src/SignalProcessing/SignalProcessor.cpp",
		"/C/Users/Ted/GitHub/MEII/src/SignalProcessing/Rectifier.cpp",
		"/C/Users/Ted/GitHub/MEII/src/SignalProcessing/TeagerKaiserEnergyOperator.cpp",
		"/C/Users/Ted/GitHub/MEII/include/SignalProcessing/Rectifier.hpp",
		"/C/Users/Ted/GitHub/MEII/include/SignalProcessing/TeagerKaiserEnergyOperator.hpp",
		"/C/Users/Ted/GitHub/MEII/src/MahiExoII/MahiExoII.cpp",
		"/C/Users/Ted/GitHub/MEII/src/MahiExoII/MeiiConfiguration.cpp",
		"/C/Users/Ted/GitHub/MEII/include/MahiExoII/MahiExoII.hpp",
		"/C/Users/Ted/GitHub/MEII/include/MahiExoII/MeiiConfiguration.hpp",
		"/C/Users/Ted/GitHub/MEII/include/MahiExoII/MeiiParameters.hpp",
		"/C/Users/Ted/GitHub/MEII/include/EMG/EmgFeatures.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Testing/test_classification.cpp",
		"/C/Users/Ted/GitHub/MEII/include/SignalProcessing/SignalProcessingFunctions.hpp",
		"/C/Users/Ted/GitHub/MEL/CMakeLists.txt",
		"/C/Users/Ted/GitHub/MEII/include/Classification/LinearDiscriminantAnalysis.hpp",
		"/C/Users/Ted/GitHub/MEII/include/EMG/EmgDataCapture.hpp",
		"/C/Users/Ted/GitHub/MEII/src/EMG/EmgDataCapture.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/EmgFeatures.cpp",
		"/C/Users/Ted/GitHub/MEII/src/EMG/MyoelectricSignal.cpp",
		"/C/Users/Ted/GitHub/MEII/src/EMG/MesArray.cpp",
		"/C/Users/Ted/GitHub/MEII/include/EMG/MyoelectricSignal.hpp",
		"/C/Users/Ted/GitHub/MEII/include/EMG/MesArray.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Testing/test_emg_direction_classification.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/LinearDiscriminantAnalysis.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/EmgActiveEnsClassifier.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Classification/EmgActiveEnsClassifier.hpp",
		"/C/Users/Ted/GitHub/MEII/include/Classification/EnsembleRTClassifier.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/EnsembleRTClassifier.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Classification/RealTimeMultiClassifier.hpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/RealTimeMultiClassifier.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/EmgActiveRTClassifier.cpp",
		"/C/Users/Ted/GitHub/MEII/src/Classification/EmgDirRTClassifier.cpp",
		"/C/Users/Ted/GitHub/MEII/include/Classification/EmgActiveRTClassifier.hpp",
		"/C/Users/Ted/GitHub/MEII/include/Classification/EmgDirRTClassifier.hpp",
		"/C/Users/Ted/GitHub/MEII/include/EmgRealTimeControl/UnityEmgRtc.hpp",
		"/C/Users/Ted/GitHub/MEII/src/EmgRealTimeControl/UnityEmgRtc.cpp",
		"/C/Users/Ted/GitHub/MEII/bin/Release/MEL.log",
		"/C/Users/Ted/GitHub/MEII/include/EmgRTControl/Classifier.hpp",
		"/C/Users/Ted/GitHub/MEII/src/EmgRTControl/Classifier.cpp",
		"/C/Users/Ted/GitHub/MEL/bin/windows/Release/MEL.log",
		"/C/Users/Ted/GitHub/MEII/tools/clean.py",
		"/C/Users/Ted/GitHub/MEII/tkeo_calibration.dir/Release/tkeo_calibration.log",
		"/C/Users/Ted/GitHub/MEII/build/CMakeFiles/CMakeOutput.log",
		"/C/Users/Ted/GitHub/MEII/src/EMGTesting/tkeo_calibration.cpp",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/boxplots.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/muscle_mapping_classification_all_features.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/muscle_mapping_classification_rms.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/muscle_mapping_classification_mav.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/muscle_mapping_classification_feature_select.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/offline_classification_scores_mav.csv",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/offline_classification_scores_full_feat_sel.csv",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/offline_classification_scores.csv",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/FeatSelData/feature_selection_plot.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/DataAnalysis/Mapping_offline/offline_compare.pdf",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/Mapping_offline/boxplots.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/MATLAB/Feature_selection/feature_selection_plot.py",
		"/C/Users/Ted/GitHub/MEL/doc/Conventions.txt",
		"/C/Users/Ted/GitHub/MEL/examples/ex_filter.cpp",
		"/C/Users/Ted/Box Sync/EMG_Exo/Exo_Run_Files/Exo_Kinematics/phi_d_qp.txt",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Logging/DataLog.hpp",
		"/C/Users/Ted/GitHub/MEII/python/EMG_FS_LDA.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/Mapping_offline/muscle_mapping_classification_all_features.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/Mapping_offline/muscle_mapping_classification_feature_select.py",
		"/C/Users/Ted/GitHub/MEII/python/EMG_FS_LDA_offline.py",
		"/C/Users/Ted/Box Sync/EMG_Exo/EmgRTControl/Mapping_offline/muscle_mapping_classification_mav.py",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Logging/DataLogger.cpp",
		"/C/Users/Ted/GitHub/MEL/tools/MEL.sublime-project",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Logging/Formatters/DataCsvFormatter.hpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Core/EmgElectrode.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Core/EmgElectrode.cpp",
		"/C/Users/Ted/GitHub/MEL/tools/EmgElectrode.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Math/Functions.cpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Math/Rectifier.hpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Math/SignalProcessor.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Math/SignalProcessor.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Math/TeagerKaiserEnergyOperator.cpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Math/TeagerKaiserEnergyOperator.hpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Math/Process.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Math/Process.cpp",
		"/C/Users/Ted/GitHub/MEII/python/MelShare.py",
		"/C/Users/Ted/GitHub/MEL/python/MelScope.pyw",
		"/C/Users/Ted/GitHub/MEL/TODO",
		"/C/Users/Ted/GitHub/MEII/bin/release/MEL.log",
		"/C/Users/Ted/GitHub/MEL/examples/ex_udp_exo_teleop.cpp",
		"/C/Users/Ted/Desktop/Backup_MEII/bin/EMG_FS_LDA.py",
		"/C/Users/Ted/Desktop/Backup_MEII/PythonLDA/EMG_machine_learning.py",
		"/C/Users/Ted/Desktop/Backup_MEII/PythonLDA/feature_selection.py",
		"/C/Users/Ted/Desktop/Backup_MEII/PythonLDA/EMG_FS_LDA.py",
		"/C/Users/Ted/GitHub/MEL/examples/ex_mahiexoiiemg_q8usb.cpp",
		"/C/Users/Ted/GitHub/MEL/examples/ex_emg_q8usb.cpp",
		"/C/Users/Ted/GitHub/MEL/examples/ex_mahiexoii_q8usb.cpp",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Legacy/Q8Usb.hpp",
		"/C/Users/Ted/GitHub/MEL/tools/clean.py",
		"/C/Users/Ted/GitHub/MEL/include/MEL/Utility/Mutex.hpp",
		"/C/Users/Ted/GitHub/MEL/src/MEL/Utility/Mutex.cpp",
		"/C/Users/Ted/Desktop/CMakeLists.txt",
		"/C/Users/Ted/GitHub/MEL/clean.py",
		"/C/Users/Ted/GitHub/MEL/MEL.sublime-project",
		"/C/Users/Ted/GitHub/MEII/bin/EMG_FS_LDA.py",
		"/C/Users/Ted/GitHub/MEII/PythonLDA/EMG_FS_LDA.py",
		"/C/Users/Ted/GitHub/MEII/bin/EMG_FS_LDA_offline.py",
		"/C/Users/Ted/Box Sync/Python Machine Learning/RFE_feat_sel.py"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"EmgRTControl"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Ted/GitHub/MEII/include/Control/Trajectory.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5417,
						"regions":
						{
						},
						"selection":
						[
							[
								1171,
								1171
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1161,
										1162
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "clean.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 941,
						"regions":
						{
						},
						"selection":
						[
							[
								239,
								239
							]
						],
						"settings":
						{
							"SL.25.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										238,
										239
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										237,
										238
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Ted/GitHub/MEII/CMakeLists.txt",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 5147,
						"regions":
						{
						},
						"selection":
						[
							[
								1030,
								1030
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										996,
										997
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										974,
										975
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "MEII.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 720,
						"regions":
						{
						},
						"selection":
						[
							[
								714,
								714
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										150,
										151
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										126,
										127
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										713,
										714
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										692,
										693
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/zzz A File Icon zzz/aliases/JSON (Sublime).sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/Ted/GitHub/MEII/src/MahiExoII/Exo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								714,
								714
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										713,
										714
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										32,
										33
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/Ted/Box Sync/OpenSim_Modeling/MAHI_EXO_II_only/MATLAB/out.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1186987,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 46,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/zzz A File Icon zzz/aliases/Plain Text (Log).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 132.0
	},
	"output.exec":
	{
		"height": 212.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "MEII.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mut",
				"src\\MEL\\Utility\\Mutex.cpp"
			],
			[
				"mute",
				"include\\MEL\\Utility\\Mutex.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 331.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
